Работа с DOM событиями и элементами, Работа с Javascript классами
Во многих модерн фреймворках (или библиотеках ) что используют JS, для DOM элементов создают некую "компоненту" в виде класса, чтобы можно было прототипировать их поведение

в LikeButton.js объявлен класс из которого мы будем создавать кнопки (компонента кнопки)

Какую роль играет constructor(...) в классах?

Контсруктор класса LikeButton получает два аргумента:

element - элемент кнопки (DOM) к которой привязывается наша логика
likes - начальное кол-во лайков, что означает по вашему ... , likes = 0 ) ?
Конструктор "запоминает" два переданных аргумента как свойства текущего объекта

Что означает слово this ?

Обратите внимание на this.element.addEventListener('click', this.like.bind(this) ) 
внутри конструктора, данная строка привязывает обработчик (функцию) like() из 
текущего класса к клику на кнопку что была передана аргументом в конструктор, 
зачем нужен ... .bind(this) ? - для того чтобы КОГДА произойдет клик - this указывал на 
текущий объект!

Каждый раз как пользователь кликает, увеличивается кол-во кликов и текст кнопки рендерится заново

у вас есть в index.html одна кнопка, ее можно найти по комбинации классов "btn" и "like", мы ее находим 
и "одеваем" свою компоненту (LikeButton) поверх кнопки

Требуется:

Доработать код // ??? в render() так чтобы он работал следующим образом:
если likes ноль, выводить "Like!"
если likes в пределах 1 .. 999, выводить "100 Likes" - кол-во лайков
если likes в пределах 1000 .. 999999, выводить "10.5k Likes" - кол-во лайков например если накопилось 10512 - то есть апроксимировать до одной цифры после запятой
следовать той же логике до 1T - terra likes
Вам возможно нужны будут некоторые функции из String, Number, Math - классов!